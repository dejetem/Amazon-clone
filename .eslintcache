[{"C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\index.js":"1","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\App.js":"2","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\reportWebVitals.js":"3","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Header.js":"4","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Home.js":"5","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Product.js":"6","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Checkout.js":"7","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Subtotal.js":"8","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\reducer.js":"9","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\StateProvider.js":"10","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\CheckoutProduct.js":"11","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Login.js":"12","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\firebase.js":"13","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Payment.js":"14","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\axios.js":"15","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Orders.js":"16","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Order.js":"17"},{"size":686,"mtime":1609015920727,"results":"18","hashOfConfig":"19"},{"size":1759,"mtime":1609113436382,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":2645,"mtime":1609120264206,"results":"22","hashOfConfig":"19"},{"size":2792,"mtime":1608997713336,"results":"23","hashOfConfig":"19"},{"size":1241,"mtime":1609018725076,"results":"24","hashOfConfig":"19"},{"size":1284,"mtime":1609073404822,"results":"25","hashOfConfig":"19"},{"size":1202,"mtime":1609094023284,"results":"26","hashOfConfig":"19"},{"size":1319,"mtime":1609112777339,"results":"27","hashOfConfig":"19"},{"size":490,"mtime":1609017620427,"results":"28","hashOfConfig":"19"},{"size":1308,"mtime":1609120054753,"results":"29","hashOfConfig":"19"},{"size":2127,"mtime":1609068132012,"results":"30","hashOfConfig":"19"},{"size":518,"mtime":1609034263925,"results":"31","hashOfConfig":"19"},{"size":5481,"mtime":1609115293084,"results":"32","hashOfConfig":"19"},{"size":250,"mtime":1609203341658,"results":"33","hashOfConfig":"19"},{"size":1068,"mtime":1609118708136,"results":"34","hashOfConfig":"19"},{"size":1214,"mtime":1609119927599,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"k6ao00",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\index.js",[],["78","79"],"C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\App.js",["80","81"],"import React,{useEffect} from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home'\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Checkout from './Checkout';\nimport Login from './Login';\nimport {auth} from './firebase';\nimport {useStateValue} from './StateProvider';\nimport Payment from './Payment';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport Orders from './Orders';\n\nconst promise = loadStripe('pk_test_51I36eKLpIW3TSf2eGeP8YUxBEIsIxSSAz6FfqCdHxyOMDU65ZLhRBuJ3r9a5jExBjUD2KG2UmnbOXp7PyHZkFlLN00lrnx0lK4');\n\n\nfunction App() {\n  const [{}, dispatch] = useStateValue();\n  useEffect(() => {\n      auth.onAuthStateChanged(authUser => {\n        console.log('The User Is', authUser);\n        if(authUser){\n            dispatch({\n              type: \"SET_USER\",\n              user: authUser\n            })\n        }else {\n          dispatch({\n            type: \"SET_USER\",\n            user: null\n          })\n        }\n      })\n  }, [])\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n          <Route exact path=\"/checkout\">\n            <Header />\n            <Checkout />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/payment\">\n            <Header />\n            <Elements stripe={promise}> \n              <Payment />\n            </Elements>\n          </Route>\n          <Route exact path=\"/orders\">\n            <Header />\n            <Orders />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\reportWebVitals.js",[],"C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Header.js",["82"],"import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport \"./Header.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport {useStateValue} from './StateProvider';\r\nimport {auth} from './firebase';\r\n\r\nfunction Header() {\r\n   const [{basket, user}, dispatch] = useStateValue();\r\n   const handleAuthentication = () => {\r\n      if(user) {\r\n         auth.signOut();\r\n      }\r\n   }\r\n    return (\r\n        <div className='header'>\r\n           <Link to=\"/\">\r\n             <img \r\n                className=\"header_logo\"\r\n                src=\"https://pngimg.com/uploads/amazon/amazon_PNG11.png\"\r\n                alt=\"amazon-logo\"\r\n              />\r\n           </Link>\r\n            <div className=\"header_search\">\r\n                <input \r\n                  className=\"header_searchInput\"\r\n                  type=\"text\"\r\n                />\r\n               <SearchIcon className=\"header_searchIcon\"/>\r\n            </div>\r\n            <div className=\"header_nav\">\r\n               <Link to={!user && \"/login\"}>\r\n                 <div onClick={handleAuthentication} className=\"header_option\">\r\n                    <span className=\"header_optionLineOne\"> \r\n                       Hello, {!user ? 'Guest' : user.email}\r\n                    </span>\r\n                    <span className=\"header_optionLineTwo\"> \r\n                      {user ? 'Sign Out' : 'Sign In'}\r\n                    </span>\r\n                  </div>\r\n               </Link>\r\n               <Link to=\"/orders\">\r\n                  <div className=\"header_option\">\r\n                     <span className=\"header_optionLineOne\"> \r\n                       Return\r\n                    </span>\r\n                    <span className=\"header_optionLineTwo\"> \r\n                       & Orders\r\n                     </span>\r\n                  </div>\r\n               </Link>\r\n                 <div className=\"header_option\">\r\n                 <span className=\"header_optionLineOne\"> \r\n                       Your\r\n                    </span>\r\n                    <span className=\"header_optionLineTwo\"> \r\n                       Prime\r\n                    </span>\r\n                 </div>\r\n                 <Link to=\"/checkout\">\r\n                   <div className=\"header_optionBasket\">\r\n                     <ShoppingBasketIcon />\r\n                     <span className=\"header_optionLineTwo header_basketCount\"> \r\n                       {basket?.length}\r\n                    </span>\r\n                   </div>\r\n                 </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Home.js",[],"C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Product.js",[],"C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Checkout.js",["83"],"import React from 'react';\r\nimport './Checkout.css'\r\nimport Subtotal from './Subtotal';\r\nimport {useStateValue} from './StateProvider';\r\nimport CheckoutProduct from './CheckoutProduct';\r\n\r\nfunction Checkout() {\r\n    const [{basket, user}, dispatch] = useStateValue();\r\n    return (\r\n        <div className=\"checkout\">\r\n            <div className=\"checkout_left\">\r\n               <img\r\n                 className=\"checkout_ad\"\r\n                 src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\"\r\n                 alt=\"advert\"\r\n               />\r\n                <div>\r\n                    <h3>Hello, {user?.email}</h3>\r\n                   <h2 className=\"checkout_title\">Your Shopping Basket</h2>\r\n                   {basket.map(item => (\r\n                       <CheckoutProduct \r\n                       id={item.id}\r\n                       title={item.title}\r\n                       price={item.price}\r\n                       image={item.image}\r\n                       rating={item.rating}\r\n                       />\r\n                   ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"checkout_right\">\r\n                <Subtotal />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Subtotal.js",["84"],"import React from 'react';\r\nimport './Subtotal.css';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport {useStateValue} from './StateProvider';\r\nimport {getBasketTotal} from './reducer';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Subtotal() {\r\n    const history = useHistory();\r\n    const [{basket}, dispatch] = useStateValue();\r\n    return (\r\n        <div className=\"subtotal\">\r\n            <CurrencyFormat \r\n               renderText = {(value) => (\r\n                   <> \r\n                      <p>\r\n                          Subtotal ({basket?.length} items):<strong>{value}</strong>\r\n                      </p>\r\n                      <small className=\"subtotal_gift\">\r\n                         <input type=\"checkbox\" /> This order contain a gift\r\n                      </small>\r\n                    </>\r\n               )}\r\n               decimalScale={2}\r\n               value={getBasketTotal(basket)}\r\n               displayType={\"text\"}\r\n               thousandSeparator={true}\r\n               prefix={\"$\"}\r\n            />\r\n            <button onClick={e => history.push('/payment')}>Proceed To Checkout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subtotal\r\n","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\reducer.js",[],"C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\StateProvider.js",[],"C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\CheckoutProduct.js",["85"],"import React from 'react';\r\nimport './CheckoutProduct.css'\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport {useStateValue} from './StateProvider';\r\n\r\nfunction CheckoutProduct({id, title, price, image, rating, hideButton}) {\r\n    const [{basket}, dispatch] = useStateValue();\r\n    const removeFromBasket = () => {\r\n        dispatch({\r\n            type: \"REMOVE_FROM_BASKET\",\r\n            id: id\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"checkoutProduct\">\r\n            <img \r\n              className=\"checkoutProduct_image\"\r\n              src={image}\r\n              alt=\"product\"\r\n            />\r\n            <div className=\"checkoutProduct_info\">\r\n               <p className=\"checkoutProduct_title\">{title}</p>\r\n               <p className=\"checkoutProduct_price\">\r\n                   <small>$</small>\r\n                   <strong>{price}</strong>\r\n               </p>\r\n               <div className=\"checkoutProduct_rating\">\r\n                   {Array(rating).fill().map((_, i) => (\r\n                      <StarIcon />\r\n                   ))}\r\n               </div>\r\n               {!hideButton && (\r\n                   <button onClick={removeFromBasket}>Remove From Basket</button>\r\n               )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutProduct\r\n","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Login.js",[],"C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\firebase.js",[],"C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Payment.js",["86"],"import React, {useState, useEffect} from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport './Payment.css';\r\nimport {useStateValue} from './StateProvider';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport {getBasketTotal} from './reducer';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport axios from './axios';\r\nimport {db} from './firebase';\r\n\r\nfunction Payment() {\r\n    const [{basket, user}, dispatch] = useStateValue();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n       //generate the special stripe secret  which allows us to charge a customer\r\n       const getClientSecret = async () => {\r\n           const response = await axios({\r\n               method: 'POST',\r\n               //stripe expects the total in a currencies subtotal\r\n               url: `/payments/create?total=${getBasketTotal(basket) * 100}`\r\n           });\r\n           setClientSecret(response.data.clientSecret);\r\n       }\r\n       getClientSecret();\r\n    },[basket])\r\n    console.log('The Secret', clientSecret);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        }).then(({paymentIntent}) => {\r\n            //paymentIntent = payment confirmation\r\n\r\n            db.collection('users')\r\n              .doc(user?.uid)\r\n              .collection('orders')\r\n              .doc(paymentIntent.id)\r\n              .set({\r\n                    basket: basket,\r\n                    amount:paymentIntent.amount,\r\n                    created:paymentIntent.created\r\n                })\r\n            setSucceeded(true);\r\n            setError(null);\r\n            setProcessing(false);\r\n\r\n            dispatch({\r\n                type: \"EMPTY_BASKET\"\r\n            })\r\n\r\n            history.replace('/orders')\r\n        })\r\n    }\r\n    const handleChange = event => {\r\n        //listening to change in CardElement and display any error message as the customer input their card details\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message: \"\");\r\n    }\r\n    return (\r\n        <div className=\"payment\">\r\n            <div className=\"payment_container\">\r\n                <h1>\r\n                    Checkout (<Link to='/checkout'>{basket?.length} items</Link>)\r\n                </h1>\r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Payment Address</h3>\r\n                    </div>\r\n                    <div className=\"payment_address\">\r\n                        <p>{user?.email}</p>\r\n                        <p>React Way</p>\r\n                        <p>Lagos, 🇳🇬 </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Review items and delivery</h3>\r\n                    </div> \r\n                    <div className=\"payment_items\">\r\n                         {basket.map(item => (\r\n                            <CheckoutProduct \r\n                              id={item.id}\r\n                              title={item.title}\r\n                              price={item.price}\r\n                              image={item.image}\r\n                              rating={item.rating}\r\n                            />\r\n                         ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"payment_section\">\r\n                    <div className=\"payment_title\">\r\n                        <h3>Payment Method</h3>\r\n                    </div>\r\n                    <div className=\"payment_details\">\r\n                        <form onSubmit={handleSubmit}>\r\n                            <CardElement onChange={handleChange}/>\r\n                            <div className=\"payment_priceContainer\">\r\n                                <CurrencyFormat \r\n                                    renderText = {(value) => (\r\n                                        <h3>Order Total:{value}</h3>\r\n                                    )}\r\n                                    decimalScale={2}\r\n                                    value={getBasketTotal(basket)}\r\n                                    displayType={\"text\"}\r\n                                    thousandSeparator={true}\r\n                                    prefix={\"$\"}\r\n                                />\r\n                                <button disabled={processing || disabled || succeeded}>\r\n                                    <span>{processing ? <p>Processing</p>: \"Buy Now\"}</span>\r\n                                </button>\r\n                            </div>\r\n                            {error && <div>{error}</div>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment;\r\n","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\axios.js",[],"C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Orders.js",["87","88"],"import React,{useState, useEffect} from 'react'\r\nimport \"./Orders.css\";\r\nimport {db} from './firebase';\r\nimport {useStateValue} from './StateProvider';\r\nimport Order from './Order';\r\n\r\nfunction Orders() {\r\n    const [{basket, user}, dispatch] = useStateValue();\r\n    const [orders,setOrders] =useState([]);\r\n    useEffect(() => {\r\n        if(user){\r\n            db.collection('users')\r\n            .doc(user?.uid)\r\n            .collection('orders')\r\n            .orderBy('created', 'desc')\r\n            .onSnapshot(snapshot => (\r\n                setOrders(snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                })))\r\n            ))\r\n        }else{\r\n            setOrders([])\r\n        }\r\n    }, [user])\r\n    return (\r\n        <div className=\"orders\">\r\n            <h1>Your Orders</h1>\r\n            <div className=\"orders_order\">\r\n                {orders?.map(order => (\r\n                    <Order order={order} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders\r\n","C:\\temp\\templar\\amazon-clone\\amazon-clone\\src\\Order.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":19,"column":10,"nodeType":"95","messageId":"96","endLine":19,"endColumn":12},{"ruleId":"97","severity":1,"message":"98","line":35,"column":6,"nodeType":"99","endLine":35,"endColumn":8,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":10,"column":27,"nodeType":"103","messageId":"104","endLine":10,"endColumn":35},{"ruleId":"101","severity":1,"message":"102","line":8,"column":28,"nodeType":"103","messageId":"104","endLine":8,"endColumn":36},{"ruleId":"101","severity":1,"message":"102","line":10,"column":22,"nodeType":"103","messageId":"104","endLine":10,"endColumn":30},{"ruleId":"101","severity":1,"message":"105","line":7,"column":13,"nodeType":"103","messageId":"104","endLine":7,"endColumn":19},{"ruleId":"101","severity":1,"message":"106","line":41,"column":15,"nodeType":"103","messageId":"104","endLine":41,"endColumn":22},{"ruleId":"101","severity":1,"message":"105","line":8,"column":13,"nodeType":"103","messageId":"104","endLine":8,"endColumn":19},{"ruleId":"101","severity":1,"message":"102","line":8,"column":28,"nodeType":"103","messageId":"104","endLine":8,"endColumn":36},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["109"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'basket' is assigned a value but never used.","'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [dispatch]",{"range":"112","text":"113"},[1053,1055],"[dispatch]"]